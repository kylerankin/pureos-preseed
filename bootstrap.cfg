## Options to set on the command line
#d-i debian-installer/locale string en_US
#d-i console-setup/ask_detect boolean false
#d-i keyboard-configuration/xkb-keymap select us

d-i netcfg/choose_interface select auto
d-i netcfg/wireless_wep string

d-i clock-setup/utc-auto    boolean true
d-i clock-setup/utc boolean true
d-i time/zone string UTC
d-i clock-setup/ntp boolean true

d-i apt-setup/cdrom/set-first boolean true
d-i apt-setup/cdrom/set-double boolean false
d-i apt-setup/cdrom/set-next boolean false
d-i apt-setup/cdrom/set-failed boolean false
d-i apt-setup/use_mirror boolean false

#d-i mirror/country string manual
#d-i mirror/http/hostname string http.us.debian.org
#d-i mirror/http/directory string /debian
#d-i mirror/http/proxy string
#d-i pkgsel/install-language-support boolean false
#d-i pkgsel/update-policy select none
#choose-mirror-bin mirror/http/mirror select http.us.debian.org
tasksel tasksel/first multiselect standard


d-i partman-lvm/device_remove_lvm boolean true
d-i partman-md/device_remove_md boolean true
d-i partman-lvm/confirm boolean true
d-i partman-auto-lvm/guided_size string max
d-i partman-auto/method string regular
d-i partman-auto/disk string /dev/sda
d-i partman-basicfilesystems/no_swap boolean false
# ugly hack because I can't find any other way to preseed skipping disk erasing
d-i partman/early_command \
       string sed -i.bak 's/-f $id\/skip_erase/-d $id/g' /lib/partman/lib/crypto-base.sh
d-i partman-auto/expert_recipe string                         \
      root-pureiso ::                                         \
              500 500 500 ext3                                \
                      $primary{ } $bootable{ }                \
                      method{ format } format{ }              \
                      use_filesystem{ } filesystem{ ext4 }    \
                      mountpoint{ /boot }                     \
              .                                               \
              2000 2000 2000 ext4                             \
                      $primary{ } method{ format } format{ }  \
                      use_filesystem{ } filesystem{ ext4 }    \
                      mountpoint{ /rescuedisk }               \
                      label{ rescuedisk }                     \
              .                                               \
              500 10000 1000000000 ext4                       \
                      $primary{ }                             \
                      method{ format } format{ }              \
                      use_filesystem{ } filesystem{ ext4 }    \
                      mountpoint{ / }                         \
              .


d-i partman-basicfilesystems/no_mount_point boolean false
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

user-setup-udeb	passwd/root-login	boolean	false
d-i passwd/user-fullname string Temporary Admin
d-i passwd/username string preseed
d-i passwd/user-password password insecure
d-i passwd/user-password-again password insecure
user-setup-udeb user-setup/encrypt-home boolean false

d-i	popularity-contest/participate	boolean	false
d-i hw-detect/load_firmware boolean false

d-i grub-installer/only_debian boolean true
d-i grub-installer/with_other_os boolean true
d-i grub-installer/choose_bootdev string /dev/sda
d-i finish-install/reboot_in_progress note
d-i debian-installer/exit/poweroff boolean true

# preseed away the complaint about the custom /etc/default/grub
grub-pc ucf/changeprompt string install the package maintainer's version
d-i preseed/early_command string mount | grep "/cdrom" | cut -f1 -d " " > /tmp/installdisk
d-i preseed/late_command string dd if=$(cat /tmp/installdisk) of=/target/rescuedisk/install_dvd1.iso; \
  if [ $url ]; then wget "$url/../grubinstall" -O /target/rescuedisk/grubinstall; fi; \
  if [ $url ]; then wget "$url/../preseed.cfg" -O /target/rescuedisk/preseed.cfg; fi; \
  if [ $file ]; then cp `dirname $file`/grubinstall /target/rescuedisk/grubinstall; fi; \
  if [ $file ]; then cp `dirname $file`/preseed.cfg /target/rescuedisk/preseed.cfg; fi; \
  cp /target/rescuedisk/grubinstall /target/etc/grub.d/08_grubinstall; \
  chmod a+x /target/etc/grub.d/08_grubinstall; \
  rm /target/etc/grub.d/10_linux; \
  in-target perl -pi -e 's/^GRUB_TIMEOUT=5/GRUB_TIMEOUT=-1/' /etc/default/grub; \
  in-target update-grub;
